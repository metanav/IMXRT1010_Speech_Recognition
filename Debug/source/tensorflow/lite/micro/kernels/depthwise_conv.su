limits:524:7:static constexpr signed char std::numeric_limits<signed char>::min()	4	static
limits:527:7:static constexpr signed char std::numeric_limits<signed char>::max()	4	static
limits:1138:7:static constexpr long int std::numeric_limits<long int>::min()	4	static
limits:1141:7:static constexpr long int std::numeric_limits<long int>::max()	4	static
limits:1602:7:static constexpr float std::numeric_limits<float>::max()	4	static
limits:1606:7:static constexpr float std::numeric_limits<float>::lowest()	4	static
fixedpoint.h:329:21:IntegerType gemmlowp::SaturatingRoundingDoublingHighMul(IntegerType, IntegerType) [with IntegerType = long int]	72	static
types.h:137:3:tflite::RuntimeShape::RuntimeShape()	16	static
types.h:156:3:tflite::RuntimeShape::RuntimeShape(int, const int32*)	24	static
types.h:178:3:tflite::RuntimeShape::~RuntimeShape()	16	static
types.h:188:16:int32 tflite::RuntimeShape::DimensionsCount() const	16	static
types.h:189:16:int32 tflite::RuntimeShape::Dims(int) const	16	static
types.h:204:17:int32* tflite::RuntimeShape::DimsData()	16	static
types.h:207:23:const int32* tflite::RuntimeShape::DimsData() const	16	static
types.h:211:23:const int32* tflite::RuntimeShape::DimsDataUpTo5D() const	16	static
types.h:213:15:void tflite::RuntimeShape::Resize(int)	16	static
types.h:231:15:void tflite::RuntimeShape::ReplaceWith(int, const int32*)	32	static
types.h:265:14:int tflite::RuntimeShape::FlatSize() const	32	static
types.h:379:12:int tflite::Offset(const tflite::RuntimeShape&, int, int, int, int)	32	static
types.h:432:12:int tflite::MatchingDim(const tflite::RuntimeShape&, int, const tflite::RuntimeShape&, int)	32	static
common.h:53:14:float tflite::ActivationFunctionWithMinMax(float, float, float)	24	static
common.h:148:14:int32 tflite::MultiplyByQuantizedMultiplier(int32, int32, int)	32	static
depthwise_conv.h:22:13:void tflite::reference_integer_ops::DepthwiseConvPerChannel(const tflite::DepthwiseParams&, const int32*, const int32*, const tflite::RuntimeShape&, const int8*, const tflite::RuntimeShape&, const int8*, const tflite::RuntimeShape&, const int32*, const tflite::RuntimeShape&, int8*)	184	static
depthwiseconv_float.h:25:13:void tflite::reference_ops::DepthwiseConv(const tflite::DepthwiseParams&, const tflite::RuntimeShape&, const float*, const tflite::RuntimeShape&, const float*, const tflite::RuntimeShape&, const float*, const tflite::RuntimeShape&, float*)	184	static
depthwiseconv_uint8.h:72:14:int32 tflite::reference_ops::depthwise_conv::DepthwiseConvRound(int32, int32, int) [with tflite::DepthwiseConvOutputRounding output_rounding = (tflite::DepthwiseConvOutputRounding)1]	24	static
depthwiseconv_uint8.h:280:13:void tflite::reference_ops::DepthwiseConv(const tflite::DepthwiseParams&, const tflite::RuntimeShape&, const uint8*, const tflite::RuntimeShape&, const uint8*, const tflite::RuntimeShape&, const int32*, const tflite::RuntimeShape&, uint8*)	48	static
tensor_ctypes.h:34:21:tflite::RuntimeShape tflite::GetTensorShape(const TfLiteTensor*)	32	static
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	16	static
kernel_util.h:28:12:int tflite::SizeOfDimension(const TfLiteTensor*, int)	16	static
kernel_util.h:31:28:const TfLiteTensor* tflite::GetInput(TfLiteContext*, const TfLiteNode*, int)	32	static
kernel_util.h:45:22:TfLiteTensor* tflite::GetOutput(TfLiteContext*, const TfLiteNode*, int)	32	static
kernel_util.h:59:12:int tflite::NumInputs(const TfLiteNode*)	16	static
kernel_util.h:77:28:const TfLiteTensor* tflite::GetOptionalInputTensor(TfLiteContext*, const TfLiteNode*, int)	40	static
padding.h:32:12:int tflite::ComputePaddingWithOffset(int, int, int, int, int, int*)	32	static
padding.h:44:12:int tflite::ComputeOutSize(TfLitePadding, int, int, int, int)	32	static
padding.h:57:28:TfLitePaddingValues tflite::ComputePaddingHeightWidth(int, int, int, int, int, int, int, int, TfLitePadding, int*, int*)	40	static
depthwise_conv.cc:62:14:TfLiteStatus tflite::ops::micro::depthwise_conv::{anonymous}::CalculateOpData(TfLiteContext*, TfLiteNode*, TfLiteDepthwiseConvParams*, int, int, int, int, TfLiteType, tflite::ops::micro::depthwise_conv::{anonymous}::OpData*)	136	static
depthwise_conv.cc:99:7:void* tflite::ops::micro::depthwise_conv::Init(TfLiteContext*, const char*, size_t)	24	static
depthwise_conv.cc:103:6:void tflite::ops::micro::depthwise_conv::Free(TfLiteContext*, void*)	16	static
depthwise_conv.cc:105:14:TfLiteStatus tflite::ops::micro::depthwise_conv::Prepare(TfLiteContext*, TfLiteNode*)	16	static
depthwise_conv.cc:109:6:void tflite::ops::micro::depthwise_conv::EvalFloat(TfLiteContext*, TfLiteNode*, TfLiteDepthwiseConvParams*, tflite::ops::micro::depthwise_conv::{anonymous}::OpData*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*)	232	static
depthwise_conv.cc:137:6:void tflite::ops::micro::depthwise_conv::EvalQuantizedPerChannel(TfLiteContext*, TfLiteNode*, TfLiteDepthwiseConvParams*, tflite::ops::micro::depthwise_conv::{anonymous}::OpData*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*)	240	static
depthwise_conv.cc:167:6:void tflite::ops::micro::depthwise_conv::EvalQuantized(TfLiteContext*, TfLiteNode*, TfLiteDepthwiseConvParams*, tflite::ops::micro::depthwise_conv::{anonymous}::OpData*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*)	240	static
depthwise_conv.cc:201:14:TfLiteStatus tflite::ops::micro::depthwise_conv::Eval(TfLiteContext*, TfLiteNode*)	2176	static
depthwise_conv.cc:265:21:TfLiteRegistration* tflite::ops::micro::Register_DEPTHWISE_CONV_2D()	4	static
stl_algobase.h:219:5:const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long int]	16	static
stl_algobase.h:195:5:const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long int]	16	static
stl_algobase.h:219:5:const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = float]	16	static
stl_algobase.h:195:5:const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = float]	16	static
fixedpoint.h:357:20:IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, int) [with IntegerType = long int]	56	static
depthwiseconv_uint8.h:92:22:static void tflite::reference_ops::depthwise_conv::DepthwiseConvBasicKernel<output_rounding>::Run(const tflite::DepthwiseParams&, const tflite::RuntimeShape&, const uint8*, const tflite::RuntimeShape&, const uint8*, const tflite::RuntimeShape&, const int32*, const tflite::RuntimeShape&, uint8*) [with tflite::DepthwiseConvOutputRounding output_rounding = (tflite::DepthwiseConvOutputRounding)1]	192	static
base.h:344:24:T flatbuffers::EndianScalar(T) [with T = int]	16	static
kernel_util.h:157:6:void tflite::CalculateActivationRange(TfLiteFusedActivation, T*, T*) [with T = float]	24	static
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = float]	16	static
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = float]	16	static
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = signed char]	16	static
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = long int]	16	static
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = signed char]	16	static
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = unsigned char]	16	static
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = unsigned char]	16	static
fixedpoint.h:64:10:tRawType gemmlowp::Dup(typename gemmlowp::FixedPointRawTypeTraits<tRawType>::ScalarRawType) [with tRawType = long int]	16	static
fixedpoint.h:70:14:tIntegerType gemmlowp::BitAnd(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:140:14:tIntegerType gemmlowp::ShiftRight(tIntegerType, int) [with tIntegerType = long int]	16	static
fixedpoint.h:199:14:tIntegerType gemmlowp::MaskIfLessThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:94:14:tIntegerType gemmlowp::Add(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:185:14:tIntegerType gemmlowp::MaskIfGreaterThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:156:14:tIntegerType gemmlowp::MaskIfNonZero(tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:88:14:tIntegerType gemmlowp::BitNot(tIntegerType) [with tIntegerType = long int]	16	static
